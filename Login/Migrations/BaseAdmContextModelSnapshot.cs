// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plataforma.Models;

#nullable disable

namespace Plataforma.Migrations
{
    [DbContext(typeof(BaseAdmContext))]
    partial class BaseAdmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Login.Models.Sedeempleado", b =>
                {
                    b.Property<int>("id_sedeEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cedula")
                        .HasColumnType("int");

                    b.Property<int>("id_cargo")
                        .HasColumnType("int");

                    b.Property<int>("id_sede")
                        .HasColumnType("int");

                    b.HasKey("id_sedeEmpleado");

                    b.HasIndex("cedula");

                    b.HasIndex("id_cargo");

                    b.HasIndex("id_sede");

                    b.ToTable("Sedeempleado");
                });

            modelBuilder.Entity("Plataforma.Models.Cliente", b =>
                {
                    b.Property<int>("cedulaCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ciudadCliente")
                        .HasColumnType("longtext");

                    b.Property<string>("empresaCliente")
                        .HasColumnType("longtext");

                    b.Property<string>("nombreCliente")
                        .HasColumnType("longtext");

                    b.Property<string>("telefonoCliente")
                        .HasColumnType("longtext");

                    b.HasKey("cedulaCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Plataforma.Models.ClientesPlataforma", b =>
                {
                    b.Property<int>("idCliPltf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("cedulaEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("celularCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("clavePerfil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaFinPago")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("fechaIniPago")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("idPlataforma")
                        .HasColumnType("int");

                    b.Property<string>("nombreCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ppm")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("valorNeto")
                        .HasColumnType("int");

                    b.Property<int>("valorVenta")
                        .HasColumnType("int");

                    b.HasKey("idCliPltf");

                    b.HasIndex("idPlataforma");

                    b.ToTable("ClientesPlataforma");
                });

            modelBuilder.Entity("Plataforma.Models.Empleado", b =>
                {
                    b.Property<int>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rh")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Cedula");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("Plataforma.Models.EmpleadoEmpresa", b =>
                {
                    b.Property<int>("id_empleadoE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cedula")
                        .HasColumnType("int");

                    b.Property<string>("id_empresa")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id_empleadoE");

                    b.HasIndex("cedula");

                    b.HasIndex("id_empresa");

                    b.ToTable("EmpleadoEmpresa");
                });

            modelBuilder.Entity("Plataforma.Models.Empresas", b =>
                {
                    b.Property<string>("id_empresa")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("pais")
                        .HasColumnType("longtext");

                    b.Property<string>("telefono")
                        .HasColumnType("longtext");

                    b.HasKey("id_empresa");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Plataforma.Models.Factura", b =>
                {
                    b.Property<int>("cod_factura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cedula")
                        .HasColumnType("int");

                    b.Property<int>("cedula_cliente")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("fechaVenta")
                        .HasColumnType("datetime(6)");

                    b.HasKey("cod_factura");

                    b.HasIndex("cedula");

                    b.HasIndex("cedula_cliente");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("Plataforma.Models.Ganancias", b =>
                {
                    b.Property<int>("id_ganancias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("gananciaMakrotecno")
                        .HasColumnType("int");

                    b.Property<int>("gananciaMaria")
                        .HasColumnType("int");

                    b.Property<int>("gananciaTeresa")
                        .HasColumnType("int");

                    b.Property<int>("gananciaTotal")
                        .HasColumnType("int");

                    b.Property<int>("gananciaVictor")
                        .HasColumnType("int");

                    b.Property<int>("id_venta")
                        .HasColumnType("int");

                    b.HasKey("id_ganancias");

                    b.HasIndex("id_venta");

                    b.ToTable("Ganancias");
                });

            modelBuilder.Entity("Plataforma.Models.PdvInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Id_Empresa")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id_Sucursal")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id_Empresa");

                    b.HasIndex("Id_Sucursal");

                    b.ToTable("PdvInfo");
                });

            modelBuilder.Entity("Plataforma.Models.Pedidos", b =>
                {
                    b.Property<int>("cod_pedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("cod_factura")
                        .HasColumnType("int");

                    b.Property<string>("cod_producto")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("estado")
                        .HasColumnType("longtext");

                    b.Property<int>("valorNeto")
                        .HasColumnType("int");

                    b.Property<int>("valorVenta")
                        .HasColumnType("int");

                    b.HasKey("cod_pedido");

                    b.HasIndex("cod_factura");

                    b.HasIndex("cod_producto");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Plataforma.Models.Plataformas", b =>
                {
                    b.Property<int>("idPlataforma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("cedulaEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaFinPago")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("fechaIniPago")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("plataforma")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("valorNeto")
                        .HasColumnType("int");

                    b.Property<int>("valorVenta")
                        .HasColumnType("int");

                    b.HasKey("idPlataforma");

                    b.HasIndex("cedulaEmpleado");

                    b.ToTable("Plataformas");
                });

            modelBuilder.Entity("Plataforma.Models.Producto", b =>
                {
                    b.Property<string>("Cod_Producto")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CantidadProducto")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext");

                    b.Property<string>("ID_Empresa")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("longtext");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("longtext");

                    b.Property<float>("ValorNetoProducto")
                        .HasColumnType("float");

                    b.Property<float>("ValorVentaProducto")
                        .HasColumnType("float");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<int>("valorUnidad")
                        .HasColumnType("int");

                    b.HasKey("Cod_Producto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Plataforma.Models.Sede", b =>
                {
                    b.Property<int>("id_sede")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ciudad")
                        .HasColumnType("longtext");

                    b.Property<string>("direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("id_empresa")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("nombreSede")
                        .HasColumnType("longtext");

                    b.Property<string>("telefono")
                        .HasColumnType("longtext");

                    b.HasKey("id_sede");

                    b.HasIndex("id_empresa");

                    b.ToTable("Sede");
                });

            modelBuilder.Entity("Plataforma.Models.TipoCargo", b =>
                {
                    b.Property<int>("id_tipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descripcionCargo")
                        .HasColumnType("longtext");

                    b.Property<string>("id_empresa")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("nombreCargo")
                        .HasColumnType("longtext");

                    b.HasKey("id_tipo");

                    b.HasIndex("id_empresa");

                    b.ToTable("TipoCargo");
                });

            modelBuilder.Entity("Plataforma.Models.VentPlatClient", b =>
                {
                    b.Property<int>("idVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("idCliPltf")
                        .HasColumnType("int");

                    b.Property<string>("perfil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("idVenta");

                    b.HasIndex("idCliPltf");

                    b.ToTable("VentPlatClient");
                });

            modelBuilder.Entity("Plataforma.Models.Ventas", b =>
                {
                    b.Property<int>("id_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cod_factura")
                        .HasColumnType("int");

                    b.Property<int>("netoMakrotecno")
                        .HasColumnType("int");

                    b.Property<int>("ventaMakrotecno")
                        .HasColumnType("int");

                    b.Property<int>("ventaPasivos")
                        .HasColumnType("int");

                    b.Property<int>("ventaRecargas")
                        .HasColumnType("int");

                    b.Property<int>("ventaTienda")
                        .HasColumnType("int");

                    b.Property<int>("ventaTotal")
                        .HasColumnType("int");

                    b.HasKey("id_venta");

                    b.HasIndex("cod_factura");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Plataforma.Models.logsLogin", b =>
                {
                    b.Property<int>("Id_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id_log");

                    b.ToTable("LogsLogin");
                });

            modelBuilder.Entity("Login.Models.Sedeempleado", b =>
                {
                    b.HasOne("Plataforma.Models.Empleado", null)
                        .WithMany()
                        .HasForeignKey("cedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plataforma.Models.TipoCargo", null)
                        .WithMany()
                        .HasForeignKey("id_cargo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plataforma.Models.Sede", null)
                        .WithMany()
                        .HasForeignKey("id_sede")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plataforma.Models.ClientesPlataforma", b =>
                {
                    b.HasOne("Plataforma.Models.Plataformas", null)
                        .WithMany()
                        .HasForeignKey("idPlataforma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plataforma.Models.EmpleadoEmpresa", b =>
                {
                    b.HasOne("Plataforma.Models.Empleado", null)
                        .WithMany()
                        .HasForeignKey("cedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plataforma.Models.Empresas", null)
                        .WithMany()
                        .HasForeignKey("id_empresa");
                });

            modelBuilder.Entity("Plataforma.Models.Factura", b =>
                {
                    b.HasOne("Plataforma.Models.Empleado", null)
                        .WithMany()
                        .HasForeignKey("cedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plataforma.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("cedula_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plataforma.Models.Ganancias", b =>
                {
                    b.HasOne("Plataforma.Models.Ventas", null)
                        .WithMany()
                        .HasForeignKey("id_venta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plataforma.Models.PdvInfo", b =>
                {
                    b.HasOne("Plataforma.Models.Empresas", null)
                        .WithMany()
                        .HasForeignKey("Id_Empresa");

                    b.HasOne("Plataforma.Models.Sede", null)
                        .WithMany()
                        .HasForeignKey("Id_Sucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plataforma.Models.Pedidos", b =>
                {
                    b.HasOne("Plataforma.Models.Factura", null)
                        .WithMany()
                        .HasForeignKey("cod_factura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plataforma.Models.Producto", null)
                        .WithMany()
                        .HasForeignKey("cod_producto");
                });

            modelBuilder.Entity("Plataforma.Models.Plataformas", b =>
                {
                    b.HasOne("Plataforma.Models.Empleado", null)
                        .WithMany()
                        .HasForeignKey("cedulaEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plataforma.Models.Sede", b =>
                {
                    b.HasOne("Plataforma.Models.Empresas", null)
                        .WithMany()
                        .HasForeignKey("id_empresa");
                });

            modelBuilder.Entity("Plataforma.Models.TipoCargo", b =>
                {
                    b.HasOne("Plataforma.Models.Empresas", null)
                        .WithMany()
                        .HasForeignKey("id_empresa");
                });

            modelBuilder.Entity("Plataforma.Models.VentPlatClient", b =>
                {
                    b.HasOne("Plataforma.Models.ClientesPlataforma", null)
                        .WithMany()
                        .HasForeignKey("idCliPltf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plataforma.Models.Ventas", b =>
                {
                    b.HasOne("Plataforma.Models.Factura", null)
                        .WithMany()
                        .HasForeignKey("cod_factura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
