@model List<Empleado>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .icono-enlace {
        display: inline-block;
        vertical-align: middle; /* Centrar verticalmente */
        margin-right: 10px; /* Agregar espacio entre iconos */
        font-size: 20px; /* Tamaño de fuente del icono */
    }
</style>
<div class="content-wrapper" id="tablaEmpleadoContainer">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <h1 class="text-white text-center">Empleados</h1>
                <div class="table-responsive justify-content-center">
                    <table class="table table-bordered tabla_ListaUsuarios" id="tablaProductos">
                        <thead style="background-color: #002d72;">
                            <tr>
                                <th scope="col">
                                    <div class="input-group mb-3">
                                        <div class="col-12">
                                            <p>Cedula</p>
                                        </div>
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="input-group mb-3">
                                        <div class="col-12">
                                            <p>Nombre</p>
                                        </div>
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="input-group mb-3">
                                        <div class="col-12">
                                            <p>Apellido</p>
                                        </div>
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="input-group mb-3">
                                        <div class="col-12">
                                            <p>Genero</p>
                                        </div>
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="input-group mb-3">
                                        <div class="col-12">
                                            <p>Correo</p>
                                        </div>
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="input-group mb-3">
                                        <div class="col-12">
                                            <p>RH</p>
                                        </div>
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="input-group mb-3">
                                        <div class="col-12">
                                            <p>Celular</p>
                                        </div>
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="input-group mb-3">
                                        <div class="col-12">
                                            <p>Contrasena</p>
                                        </div>
                                    </div>
                                </th>
                                <th scope="col" class="text-center">
                                    <div class="container">
                                        <div class="row">
                                            <div class="col-12">
                                                <form id="formBusqueda">
                                                    <label for="searchTerm">Buscar:</label>
                                                    <input type="text" id="searchTerm" name="searchTerm" />
                                                    <button type="button" id="btnBuscar">Buscar</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </th>
                            </tr>
                        </thead>
                        <!--Lista de Usuarios-->
                        <tbody id="resultados" class="listaUsuarios">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="paginacion-container" class="text-center" style="margin-bottom:10px;">
    <button onclick="cambiarPagina(-1)" id="botonAnterior">Anterior</button>
    <span id="pagina-actual" class="text-white">Página 1</span>
    <button onclick="cambiarPagina(1)" id="botonSiguiente">Siguiente</button>
</div>

<script>
    var paginaActual = 1;
    var perfilesPorPagina = 10; // Puedes ajustar esto según tus necesidades
    var totalPerfiles = @Model.Count(); // Obtén el total de perfiles desde el modelo

    function cambiarPagina(direccion) {
        paginaActual += direccion;
        mostrarPerfiles();
    }

    function mostrarPerfiles() {
        var perfiles = @Html.Raw(Json.Serialize(Model));
        var inicio = (paginaActual - 1) * perfilesPorPagina;
        var fin = inicio + perfilesPorPagina;
        var perfilesPagina = perfiles.slice(inicio, fin);
        actualizarTabla(perfilesPagina);
        actualizarPaginacion();
    }

    function actualizarTabla(perfiles) {
        var resultados = document.getElementById('resultados');
        resultados.innerHTML = '';
        perfiles.forEach(perfil => {
            var fila = document.createElement('tr');
            fila.className = 'perfil-fila';
            var html = `<td>${perfil.Cedula}</td>`;
            html += `<td>${perfil.Nombre}</td>`;
            html += `<td>${perfil.Apellido}</td>`;
            html += `<td>${perfil.Genero}</td>`;
            html += `<td>${perfil.Correo}</td>`;
            html += `<td>${perfil.Rh}</td>`;
            html += `<td>${perfil.Celular}</td>`;
            html += `<td>${perfil.Contrasena}</td>`;

            // Crear celdas para cada propiedad del perfil
            var propiedades = ['cedula', 'nombre', 'apellido', 'genero', 'correo', 'rh', 'celular', 'contrasena'];
            propiedades.forEach(propiedad => {
                var celda = document.createElement('td');
                celda.textContent = perfil[propiedad];
                fila.appendChild(celda);
            });

            var enlace1 = crearEnlace(`/Usuario/Editar?id=${perfil.cedula}`, 'fas fa-pencil-alt');
            var enlace2 = crearEnlace(`/Usuario/FormEmpleadoCompania?cedula=${perfil.cedula}`, 'fas fa-pencil-alt');
            var enlace3 = crearEnlace(`/Producto/Eliminar?id=${perfil.cedula}`, 'fas fa-trash-alt');

            // Agregar enlaces a una celda
            var acciones = document.createElement('td');
            acciones.appendChild(enlace1);
            acciones.appendChild(enlace2);
            acciones.appendChild(enlace3);
            fila.appendChild(acciones);

            // Agregar la fila a la tabla
            resultados.appendChild(fila);
        });
    }

    function crearEnlace(href, iconoClass) {
        var enlace = document.createElement('a');
        enlace.href = href;
        var icono = document.createElement('i');

        icono.classList.add('icono-enlace');

        // Separar las clases y agregarlas individualmente
        var clases = iconoClass.split(' ');
        clases.forEach(clase => {
            icono.classList.add(clase);
        });

        enlace.appendChild(icono);
        enlace.onclick = function () {
            window.location.href = this.href;
            return false; // Prevenir el comportamiento predeterminado del enlace
        };
        return enlace;
    }
    //fin funciones

    function actualizarPaginacion() {
        var paginaActualElement = document.getElementById('pagina-actual');
        paginaActualElement.textContent = `Página ${paginaActual}`;

        var botonAnterior = document.getElementById('botonAnterior');
        var botonSiguiente = document.getElementById('botonSiguiente');

        botonAnterior.disabled = paginaActual <= 1;
        botonSiguiente.disabled = (paginaActual * perfilesPorPagina) >= totalPerfiles;
    }

    mostrarPerfiles();


    // Script para manejar la búsqueda asíncrona
    $(document).ready(function () {
        $("#btnBuscar").click(function () {
            var searchTerm = $("#searchTerm").val();
            var categoriaTerm = $("#categoriaTerm").val();
            $.ajax({
                type: "POST",
                url: "/Producto/Buscar",
                data: { searchTerm: searchTerm, categoriaTerm: categoriaTerm },
                success: function (result) {
                    // Se espera que el controlador devuelva la vista parcial adecuada según la situación
                    $("#tablaEmpleadoContainer").html(result);
                },
                error: function () {
                    // Manejo de errores si es necesario
                    $("#tablaEmpleadoContainer").html("<p>Ocurrió un error al procesar la solicitud.</p>");
                }
            });
        });
    });
</script>
